#!/bin/bash
SCRIPT="$(readlink -f "${BASH_ARGV0:-${BASH_SOURCE:-${0}}}")"

set -euo pipefail
. /.functions

list_artifacts()
{
	local SRC="${1}"
	cat "${SRC}" | sed -e '/^\s*#/d' -e '/^\s*$/d' | sort -V -k 1
}

select_latest()
{
	# Find the version that's the latest, and use it
	local LATEST="$(echo -n "${@}" | tr ' ' '\n' | sort -V -r | head -1 | tr -d '\n')"
	if [ -n "${LATEST}" ] ; then
		doing "Setting the latest version to point to [${LATEST}]"
		if ( cd "${TOOL}" && ln -sv "${LATEST}" "latest" ) ; then
			ok "Latest marker set"
		else
			warn "Failed to set the latest marker to point to [${LATEST}]"
		fi
	else
		warn "No latest version selected among [${VERSIONS[@]}]"
	fi
	return 0
}

usage()
{
	echo -e "usage: ${BASH_ARGV0:-${BASH_SOURCE:-${0}}} [tool-dir-1 tool-dir-2 tool-dir-3 ... tool-dir-N]" 1>&2
	exit 1
}

[ ${#} -gt 0 ] || usage

[ -v DEBUG ] || DEBUG=""
[ -n "${DEBUG}" ] || DEBUG="false"
case "${DEBUG,,}" in
	true | false ) ;;
	* ) DEBUG="false" ;;
esac

"${DEBUG}" && set -x

doing "Installing ${#} tools..."
FAILED=()
for TOOL in "${@}" ; do
	[ -e "${TOOL}" ] && [ -d "${TOOL}" ] && [ -r "${TOOL}" ] && [ -x "${TOOL}" ] || {
		warn "The path [${TOOL}] does not exist or is not an accessible directory, skipping!"
		continue
	}

	ARTIFACTS="${TOOL}/.artifacts"
	[ -e "${ARTIFACTS}" ] && [ -f "${ARTIFACTS}" ] && [ -r "${ARTIFACTS}" ] || {
		warn "The path [${TOOL}] does not have an artifacts manifest, skipping!"
		continue
	}
	
	INSTALLER="${TOOL}/.install"
	[ -e "${INSTALLER}" ] && [ -f "${INSTALLER}" ] && [ -x "${INSTALLER}" ] || {
		warn "The path [${TOOL}] does not have an installer script, skipping!"
		continue
	}

	TOOL="$(readlink -f "${TOOL}")"
	ARTIFACTS="$(readlink -f "${ARTIFACTS}")"

	VERSIONS=()
	doing "Installing the tool from [${TOOL}]..."
	while read VERSION ARTIFACT ; do
		doing "Processing version ${VERSION} from [${ARTIFACT}]..."
		(
			set -euo pipefail
			cd "${TOOL}"
			exec ./.install "${VERSION}" "${ARTIFACT}"
		) || fail "Installation failed for ${TOOL} version ${VERSION}"

		VERSIONS+=("${VERSION}")
		ok "Installation complete!"
	done < <(list_artifacts "${ARTIFACTS}")
	select_latest "${VERSIONS[@]}"
done
exit 0
